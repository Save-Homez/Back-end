name: CI/CD

on:
  push:
    branches: [ "release" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Create .env file
      run: |
        echo "${{ secrets.ENV }}" >> .env

    - name: Copy docker files to server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ubuntu
        key: ${{ secrets.SERVER_KEY }}
        source: "docker-compose.yml, .env, ./nginx/default.conf"
        target: "/home/ubuntu/docker/"

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: "adopt"

    - name: Make application.properties for homes
      run: |
          cd ./src/main/resources
          touch ./application.properties
          echo "${{ secrets.PROPERTIES }}" > application.properties
      shell: bash

    - name: Build homes module
      run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test

    - name: Build and Push Docker Image for homes
      run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile -t ${{ secrets.DOCKER_REPO_HOMES }} .
          docker push ${{ secrets.DOCKER_REPO_HOMES }}
  
    - name: Deploy to server
      uses: appleboy/ssh-action@master
      id: deply
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ubuntu
        key: ${{ secrets.SERVER_KEY }}
        envs: GITHUB_SHA
        script: |
          cd /home/ubuntu/docker/
          if [ "${docker ps -aq)" ]; then
            sudo docker rm -f $(docker ps -qa)
          else
            echo "No containers to remove."
          fi
          if [ "$(docker images -q)" ]; then
            sudo docker rmi -f $(docker images -q)
          else
            echo "No images to remove."
          fi
          docker-compose up -d
          docker image prune -f
